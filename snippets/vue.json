{
    "Vue Single File Component": {
        "prefix": "vbase",
        "body": [
            "<template>",
            "\t<div>",
            "",
            "\t</div>",
            "</template>",
            "",
            "<script>",
            "\texport default {",
            "\t\t${0}",
            "\t}",
            "</script>",
            "",
            "<style scoped>",
            "",
            "</style>"
        ],
        "description": "Base for Vue File"
    },
    "Vue Single File Component Pug": {
        "prefix": "vbasep",
        "body": [
            "<template lang=\"pug\">",
            "\tdiv",
            "</template>",
            "",
            "<script>",
            "\texport default {",
            "\t\t${0}",
            "\t}",
            "</script>",
            "",
            "<style lang=\"stylus\" scoped>",
            "",
            "</style>"
        ],
        "description": "Base for Vue File Pug"
    },
    "Vue Data": {
        "prefix": "vdata",
        "body": [
            "data() {",
            "\treturn {",
            "\t\t${1:key}: ${2:value}",
            "\t}",
            "},"
        ],
        "description": "Vue Component Data"
    },
    "Vuex Store": {
        "prefix": "vstore",
        "body": [
            "import Vue from 'vue';",
            "import Vuex from 'vuex';",
            "",
            "Vue.use(Vuex);",
            "",
            "export const store = new Vuex.Store({",
            "\tstate: {",
            "\t\t${1:key}: ${2:value}",
            "\t}",
            "});"
        ],
        "description": "Base for Vuex store"
    },
    "Vue Props with Default": {
        "prefix": "vprops",
        "body": [
            "props: {",
            "\t${1:propName}: {",
            "\t\ttype: ${2:number},",
            "\t\tdefault: ${0}",
            "\t},",
            "},"
        ],
        "description": "Vue Props with Default"
    },
    "Vue Import File": {
        "prefix": "vimport",
        "body": [
            "import ${1:New} from './components/${1:New}.vue';"
        ],
        "description": "Import one component into another"
    },
    "Vue Import into the Component": {
        "prefix": "vimport-c",
        "body": [
            "components: {",
            "\t${1:New},",
            "}"
        ],
        "description": "Import one component into another, within export statement"
    },
    "Vue Import Export": {
        "prefix": "vimport-export",
        "body": [
            "import ${1:Name} from '~components/${1:Name}.vue'",
            "",
            "export default {",
            "\tcomponents: {",
            "\t\t${1:Name}",
            "\t},",
            "}"
        ],
        "description": "import a component and include it in export default"
    },
    "Vue v-for": {
        "prefix": "vfor",
        "body": [
            "<${1:div} v-for=\"${2:item} in ${2:item}s\" :key=\"${2:item}.id\">",
            "\t{{ ${2:item} }}",
            "</${1:div}>"
        ],
        "description": "vfor statement"
    },
    "Vue Transition Methods with JavaScript Hooks": {
        "prefix": "vanimhook-js",
        "body": [
            "methods: {",
            "\tbeforeEnter(el) {",
            "\t\tconsole.log('beforeEnter');",
            "\t},",
            "\tenter(el, done) {",
            "\t\tconsole.log('enter');",
            "\t\tdone();",
            "\t},",
            "\tbeforeLeave(el) {",
            "\t\tconsole.log('beforeLeave');",
            "\t},",
            "\tleave(el, done) {",
            "\t\tconsole.log('leave');",
            "\t\tdone();",
            "\t},",
            "},"
        ],
        "description": "transition component js hooks"
    },
    "Vuex Getters": {
        "prefix": "vgetter",
        "body": [
            "getters: {",
            "\tvalue: ${1:value} => {",
            "\t\treturn state.${1:value};",
            "\t}",
            "}"
        ],
        "description": "vuex getter"
    },
    "Vuex Mutation": {
        "prefix": "vmutation",
        "body": [
            "mutations: {",
            "\t${1:updateValue}(state, ${3:payload}) {",
            "\t\tstate.${2:value} = ${3:payload};",
            "\t}",
            "}"
        ],
        "description": "vuex mutation"
    },
    "Vuex Action": {
        "prefix": "vaction",
        "body": [
            "actions: {",
            "\t${1:updateValue}({commit}, ${2:payload}) {",
            "\t\tcommit(${1:updateValue}, ${2:payload});",
            "\t}",
            "}"
        ],
        "description": "vuex action"
    },
    "Vue Filter": {
        "prefix": "vfilter",
        "body": [
            "filters: {",
            "\t${1:fnName}: function(${2:value}) {",
            "\t\treturn ${2:value}${0};",
            "\t}",
            "}"
        ],
        "description": "vue filter"
    },
    "Vue Mixin": {
        "prefix": "vmixin",
        "body": [
            "const ${1:mixinName} = {",
            "\tmounted() {",
            "\t\tconsole.log('hello from mixin!')",
            "\t},",
            "}"
        ],
        "description": "vue mixin"
    },
    "Vue Use Mixin": {
        "prefix": "vmixin-use",
        "body": [
            "mixins: [${1:mixinName}]"
        ],
        "description": "vue use mixin"
    },
    "Vue Custom Directive": {
        "prefix": "vc-direct",
        "body": [
            "Vue.directive('${1:directiveName}', {",
            "\tbind(el, binding, vnode) {",
            "\t\tel.style.${2:arg} = binding.value.${2:arg};",
            "\t}",
            "});"
        ],
        "description": "vue custom directive"
    },
    "Vue Methods": {
        "prefix": "vmethod",
        "body": [
            "methods: {",
            "\t${1:name}() {",
            "\t\t${0}",
            "\t}",
            "},"
        ],
        "description": "vue method"
    },
    "Vue Computed": {
        "prefix": "vcomputed",
        "body": [
            "computed: {",
            "\t${1:name}() {",
            "\t\treturn this.${2:data} ${0}",
            "\t}",
            "},"
        ],
        "description": "computed value"
    },
    "Vue Watchers": {
        "prefix": "vwatcher",
        "body": [
            "watch: {",
            "\t${1:data}(${2:newValue}, ${3:oldValue}) {",
            "\t\t${0}",
            "\t}",
            "},"
        ],
        "description": "vue watcher"
    },
    "Vue Import Vuex Store": {
        "prefix": "vstore-import",
        "body": [
            "import { store } from './store/store';"
        ],
        "description": "import vuex store into main.js"
    },
    "Vue Import Library": {
        "prefix": "vimport-lib",
        "body": [
            "import { ${1:libName} } from '${1:libName}'"
        ],
        "description": "import a library"
    },
    "Vue Import GSAP": {
        "prefix": "vimport-gsap",
        "body": [
            "import { TimelineMax, ${1:Ease} } from 'gsap'"
        ],
        "description": "component methods options that dispatch an action from vuex store."
    },
    "Vue v-model Directive": {
        "prefix": "vmodel",
        "body": [
            "<input v-model=\"${1:data}\" type=\"text\" />"
        ],
        "description": "v-model directive"
    },
    "Vue v-model Number Directive": {
        "prefix": "vmodel-num",
        "body": [
            "<input v-model.number=\"${1:numData}\" type=\"number\" step=\"1\" />"
        ],
        "description": "v-model directive number input"
    },
    "Vue v-on Shortcut Directive": {
        "prefix": "von",
        "body": [
            "@click=\"${1:handler}(${2:arg}, $event)\""
        ],
        "description": "v-on click handler with arguments"
    },
    "Vue Component with Props Binding": {
        "prefix": "vel-props",
        "body": [
            "<${1:component} :${1:propName}=\"${0}\"></${1:component}>"
        ],
        "description": "component element with props"
    },
    "Vue Image Source Binding": {
        "prefix": "vsrc",
        "body": [
            "<img :src=\"'/path/to/images/' + ${1:fileName}\" alt=\"${2:altText}\"/>"
        ],
        "description": "image source binding"
    },
    "Vue Style Binding": {
        "prefix": "vstyle",
        "body": [
            "<${1:div} :style=\"{ fontSize: ${2:data} + 'px' }\"></${1:div}>"
        ],
        "description": "vue inline style binding"
    },
    "Vue Style Binding Object": {
        "prefix": "vstyle-obj",
        "body": [
            "<${1:div} :style=\"[${2:styleObjectA}, ${3:styleObjectB]}\"></${1:div}>"
        ],
        "description": "vue inline style binding, objects"
    },
    "Vue Class Binding": {
        "prefix": "vclass",
        "body": [
            "<${1:div} :class=\"{ ${2:className}: ${3:data} }\"></${1:div}>"
        ],
        "description": "vue class binding"
    },
    "Vue Class Binding Object": {
        "prefix": "vclass-obj",
        "body": [
            "<${1:div} :class=\"[${2:classNameA}, ${3:classNameB}]\"></${1:div}>"
        ],
        "description": "vue class binding"
    },
    "Vue Multiple Conditional Class Bindings": {
        "prefix": "vclass-obj-mult",
        "body": [
            "<${1:div} :class=\"[${2:classNameA}, {${3:classNameB} : ${4:condition}}]\"></${1:div}>"
        ],
        "description": "vue multiple conditional class bindings"
    },
    "Vue Transition Component with JavaScript Hooks": {
        "prefix": "vanim",
        "body": [
            "<transition",
            "\tmode=\"out-in\"",
            "\t@before-enter=\"beforeEnter\"",
            "\t@enter=\"enter\"",
            "",
            "\t@before-leave=\"beforeLeave\"",
            "\t@leave=\"leave\"",
            "\t:css=\"false\">",
            "",
            "</transition>"
        ],
        "description": "transition component js hooks"
    },
    "Incrementer": {
        "prefix": "vinc",
        "body": [
            "return ${1:this.num} += ${2:1}"
        ],
        "description": "increment"
    },
    "Decrementer": {
        "prefix": "vdec",
        "body": [
            "return ${1:this.num} -= ${2:1}"
        ],
        "description": "decrement"
    },
    "vue": {
        "prefix": "nvue",
        "body": [
            "new Vue({",
            "\tel: '#app',",
            "\tdata: {",
            "\t\t${1:key}: ${2:value}",
            "\t},",
            "\tmounted() {",
            "\t\t",
            "\t}",
            "})"
        ],
        "description": "new Vue()"
    },
    "req": {
        "prefix": "vpoly",
        "body": [
            "import req from 'polyasync'"
        ],
        "description": "Import Polyasync"
    },
    "loader": {
        "prefix": "vloader",
        "body": [
            "import Loader from 'web/Loader/cpn'"
        ],
        "description": "Import Loader"
    },
    "alert": {
        "prefix": "valert",
        "body": [
            "import AlertResponse from 'web/AlertResponse/cpn'"
        ],
        "description": "Import AlertResponse"
    },
    "confirm": {
        "prefix": "vconfirm",
        "body": [
            "import ConfirmResponse from 'web/ConfirmResponse/cpn'"
        ],
        "description": "Import ConfirmResponse"
    }
}
